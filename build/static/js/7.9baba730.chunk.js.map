{"version":3,"sources":["containers/dashboard/widgets/patientTable.js","containers/dashboard/widgets/banner.js","containers/dashboard/widgets/recentMedications.js","containers/dashboard/widgets/recentPayments.js","containers/dashboard/widgets/todaysAppointment.js","containers/dashboard/index.js","components/widgets.js","components/form.js","components/dropdown.js","containers/home/titleBar.js","components/lists.js","components/cards.js"],"names":["PatientTable","props","data","ingredient","tradeName","strength","form","morning","midday","evening","night","unit","hints","reason","columns","Header","accessor","WelcomeMessage","today","Date","className","FullName","user","session","date","ServicesAlert","useState","isLoading","setIsLoading","count","setCount","useEffect","a","username","Username","fetch","headers","authToken","response","json","ok","Error","message","length","console","error","getCount","role","Banner","isCurrentUserPhysician","Boolean","isPhysician","DefaultMedicationItem","ViewAllItem","to","MedicationItem","medication","appointmentId","name","dosage","RecentMedicationWidget","medications","limit","state","setState","prevState","newMedications","initialize","title","map","index","DefaultPaymentItem","PaymentItem","payment","value","amount","RecentPaymentWidget","payments","newPayments","DisplayName","currentUserFullName","patientFullName","appointment","patient","physicianFullName","physician","AppointmentTitle","DefaultAppointmentItem","AppointmentItem","setAppointment","id","load","startTime","TodayAppointmentWidget","appointments","newAppointments","DashBoardApp","useSelector","s","WidgetRow","useExtendClass","children","WidgetColumns","class","Widget","TitleBar","TitleButtons","TitleButton","type","data-toggle","onClick","handleClick","icon","TitleToggler","collapseMode","setCollapseMode","e","data-target","target","aria-expanded","aria-controls","collapseIcon","expandIcon","WidgetBody","otherProps","WidgetCollapsible","WidgetList","WidgetListItem","WidgetDropdown","labelledBy","WidgetDropdownItem","Form","enctype","method","autoComplete","onSubmit","handleSubmit","FormRow","FormGroup","FormButton","disabled","FormSubmit","FormLabel","htmlFor","for","FormLegend","Dropdown","DropdownButton","aria-haspopup","DropdownButtonToggle","DropdownMenu","aria-labelledby","DropdownMenuDivider","DropdownMenuButton","Toggler","DropdownMenuItem","TitleBarLink","tooltip","TitleBarLinks","TitleBarSearch","query","fields","setFields","preventDefault","handleSearch","err","placeholder","onChange","aria-label","aria-describedby","toggleType","asList","NotificationDropDown","UserDropdown","dispatch","useDispatch","credentials","menuLinks","path","menuLink","exact","List","ListItem","ListLink","url","ListButton","Card","CardHeader","CardBody","CardFooter","BodyCard"],"mappings":"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","file":"static/js/7.9baba730.chunk.js","sourcesContent":["import ReactTable from \"react-table\";\n\n\nexport default function PatientTable(props){\n        const data = [\n          {\n            ingredient: \"Metoprolol succinat\",\n            tradeName: 'METOPROLOLSUCCINA T 1A 95MG',\n            strength:'95 mg',\n            form:'RetTabl',\n            morning:1,\n            midday:0,\n            evening:0,\n            night: 0,\n            unit:'stück',\n            hints:'',\n            reason:'Herz/Blutdruck'\n          },\n          {\n            ingredient: \"Ramipril\",\n            tradeName: 'RAMIPRIL RATIOPHARM 5MG',\n            strength:'5 mg',\n            form:'Tabl',\n            morning:1,\n            midday:0,\n            evening:0,\n            night: 0,\n            unit:'stück',\n            hints:'',\n            reason:'Blutdruck'\n          },\n          {\n            ingredient: \"Insulin aspart\",\n            tradeName: 'NOVORAPID PENFILL ZYLINAMP',\n            strength:'100 E/ml',\n            form:'Amp',\n            morning:20,\n            midday:0,\n            evening:20,\n            night: 0,\n            unit:'IE',\n            hints:'Wechseln der Injektionsstellen, unmittelbar vor einer Mahlzeit spritzen',\n            reason:'Herz/Blutdruck'\n          },\n          {\n            ingredient: \"Simvastatin\",\n            tradeName: 'SIMVA ARISTO 40MG',\n            strength:'40 mg',\n            form:'Tabl',\n            morning:0,\n            midday:0,\n            evening:1,\n            night: 0,\n            unit:'stück',\n            hints:'',\n            reason:'Blutfette'\n          },\n        ];\n        const columns = [\n          {\n            Header: 'Wirkstoff',\n            accessor: 'ingredient'\n          },\n          {\n            Header: \"Handelsname\",\n            accessor: \"tradeName\",\n          },\n          {\n            Header: \"Stärke\",\n            accessor: \"strength\",\n          },\n          {\n            Header: 'Form',\n            accessor: 'form'\n          },\n          {\n            Header: \"morgens\",\n            accessor: \"morning\",\n          },\n          {\n            Header: \"mit-tags\",\n            accessor: \"midday\",\n          },\n          {\n            Header: 'abends',\n            accessor: 'evening'\n          },\n          {\n            Header: \"zur Nacht\",\n            accessor: \"night\",\n          },\n          {\n            Header: \"Einheit\",\n            accessor: \"unit\",\n          },\n          {\n            Header: \"Hinweise\",\n            accessor: \"hints\"\n          },\n          {\n            Header: \"Grund\",\n            accessor: \"reason\"\n          }\n        ];  \n           return (  \n          <div>  \n              <ReactTable  \n                  data={data}  \n                  columns={columns}  \n              />  \n          </div>        \n    )  \n\n}\n\n\n  \n","import React, { useEffect, useState } from 'react';\nimport { BodyCard } from '../../../components/cards';\nimport { PrettyDate } from '../../../components/dates';\nimport { LgIcon } from '../../../components/icons';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { FullName, Username } from '../../../components/users';\n\n\nfunction WelcomeMessage(props) {\n    const today = new Date();\n    return (\n        <Row className=\"justify-content-between\">\n            <Col className=\"align-items-center\">\n                <h6 className=\"text-muted my-1 py-0\">\n                    {`Welcome ${FullName({user: props.session})}.`}\n                </h6>\n            </Col>\n            <Col className=\"text-muted col-auto\">\n                <PrettyDate date={today} />\n            </Col>\n        </Row>\n    );\n}\n\n\nfunction ServicesAlert(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        async function getCount() {\n            try {\n                setIsLoading(true);\n                const username = Username({ user: props.session });\n                const page = 0;\n                const limit = 10;\n\n                const response = await fetch(`/api/users/${username}/services?page=${page}&limit=${limit}`, {\n                    headers: {\n                        'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n\n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setCount(data.length);\n            } catch (err) {\n                console.error(`Failed to get count of services. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        getCount();\n    }, [props.session]);\n\n    if (isLoading || count > 0) {\n        return null;\n    } else {\n        return (\n            <Row className=\"mt-3\">\n                <Col>\n                    <div className=\"alert alert-danger d-flex p-2\" role=\"alert\">\n                        <LgIcon className=\"mx-1\">person</LgIcon>\n                        <p className=\"my-0\">\n                            You have not added any services yet. Add a service to your profile \n                            to help patients schedule new appointments with you.\n                        </p>\n                    </div>\n                </Col>\n            </Row>\n        );\n    }\n}\n\n\nexport default function Banner(props) {\n    const isCurrentUserPhysician = Boolean(props.session.isPhysician);\n    \n    return (\n        <BodyCard className=\"rounded\">\n            <FluidContainer>\n                <WelcomeMessage \n                    session={props.session}\n                />\n                {(isCurrentUserPhysician) &&\n                    <ServicesAlert \n                        session={props.session}\n                    />\n                }\n            </FluidContainer>\n        </BodyCard>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DefaultMedicationItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No medications available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to={`/users/${props.session.username}/medications`}>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction MedicationItem(props) {\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col>\n                                <Link to={`/medications/${props.medication.appointmentId}`}\n                                    className=\"font-weight-bold text-truncate\">\n                                    {props.medication.name}\n                                </Link>\n                            </Col>\n                            <Col className=\"col-auto\">\n                                {`${props.medication.dosage} mg`}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function RecentMedicationWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        medications: [],\n        limit: 5\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const username = props.session.username;\n                const page = 0;\n\n                const response = await fetch(`/api/users/${username}/medications?page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setState(prevState => {\n                    const newMedications = [...prevState.medications, ...data];\n\n                    return {\n                        ...prevState,\n                        medications: newMedications\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load recent medications. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Recent Medications\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.medications.length !== 0) ?\n                            <>\n                                {state.medications.map((medication, index) => (\n                                    <MedicationItem \n                                        key={index}\n                                        medication={medication}\n                                    />\n                                ))}\n                                <ViewAllItem session={props.session} />\n                            </> :\n                            <DefaultMedicationItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NumericDate } from '../../../components/dates';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { Currency } from '../../../components/users';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DefaultPaymentItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No payments available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to={`/users/${props.session.username}/payments`}>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction PaymentItem(props) {\n    const date = new Date(props.payment.date);\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    <Col className=\"align-self-center\">\n                        <Row>\n                            <Col>\n                                <Link to={`/appointments/${props.payment.appointmentId}/payments`}\n                                    className=\"font-weight-bold text-truncate\">\n                                    <Currency value={props.payment.amount} />\n                                </Link>\n                            </Col>\n                            <Col className=\"col-auto\">\n                                <NumericDate date={date} />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function RecentPaymentWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        payments: [],\n        limit: 5\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const username = props.session.username;\n                const page = 0;\n\n                const response = await fetch(`/api/users/${username}/payments?page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n\n                setState(prevState => {\n                    const newPayments = [...prevState.payments, ...data];\n\n                    return {\n                        ...prevState,\n                        payments: newPayments\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load recent payments. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Recent Payments\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.payments.length !== 0) ?\n                            <>\n                                {state.payments.map((payment, index) => (\n                                    <PaymentItem \n                                        key={index}\n                                        payment={payment}\n                                    />\n                                ))}\n                                <ViewAllItem session={props.session} />\n                            </> :\n                            <DefaultPaymentItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FullTime, PrettyDate } from '../../../components/dates';\nimport { Col, FluidContainer, Row } from '../../../components/layout';\nimport { Loader } from '../../../components/loaders';\nimport { FullName } from '../../../components/users';\nimport { TitleBar, Widget, WidgetBody, WidgetList, WidgetListItem } from '../../../components/widgets';\n\n\nfunction DisplayName(props) {\n    const currentUserFullName = FullName({ user: props.session });\n    const patientFullName = FullName({ user: props.appointment.patient });\n    const physicianFullName = FullName({ user: props.appointment.physician });\n\n    if (currentUserFullName === patientFullName) {\n        return physicianFullName;\n    } else {\n        return patientFullName;\n    }\n}\n\n\nfunction AppointmentTitle(props) {\n    return (props.appointment) ? props.appointment.title: \"\";\n}\n\n\nfunction DefaultAppointmentItem(props) {\n    return (\n        <WidgetListItem>\n            <FluidContainer>\n                <Row>\n                    <Col className=\"md-font-sm text-center text-muted\">No appointments available</Col>\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nfunction ViewAllItem(props) {\n    return (\n        <WidgetListItem>\n            <Link to='/appointments?view=waiting'>\n                <FluidContainer>\n                    <Row>\n                        <Col className=\"md-font-sm text-center text-muted\">View All</Col>\n                    </Row>\n                </FluidContainer>\n            </Link>\n        </WidgetListItem>\n    );\n}\n\n\nfunction AppointmentItem(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [appointment, setAppointment] = useState({});\n\n    useEffect(() => {\n        async function load() {\n            try {\n                setIsLoading(true);\n\n                const response = await fetch(`/api/appointments/${props.appointment.id}`, {\n                    headers: {\n                        'Authorization': `Bearer ${props.session.authToken}`\n                    }\n                });\n            \n                let appointment = await response.json();\n                if (!response.ok) {\n                    throw new Error(appointment.message);\n                }\n\n                setAppointment(appointment);\n            } catch (err) {\n                console.error(`Failed to load appointment- ${props.appointment.id}. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        load();\n    }, [props.appointment, props.session]);\n\n    return(\n        <WidgetListItem className=\"list-group-item-action\">\n            <FluidContainer>\n                <Row>\n                    {\n                        (isLoading) ?\n                        <>\n                            <Loader isLoading={true} />\n                        </> :\n                        <>\n                            <Col className=\"col-auto align-self-center\">\n                                <p className=\"text-center my-0\">\n                                    <FullTime date={appointment.startTime} />\n                                </p>\n                                <p className=\"md-font-sm text-center text-muted my-0\">\n                                    <PrettyDate date={appointment.startTime} />\n                                </p>\n                            </Col>\n                            <Col className=\"align-self-center\">\n                                <p className=\"my-0\">\n                                    <Link to={`/appointments/${appointment.id}`}\n                                        className=\"text-truncate font-weight-bold\">\n                                        <DisplayName\n                                            session={props.session}\n                                            appointment={appointment}\n                                        />\n                                    </Link>\n                                </p>\n                                <p className=\"md-font-sm text-truncate text-muted my-0\">\n                                    <AppointmentTitle\n                                        appointment={appointment}\n                                    />\n                                </p>\n                            </Col>\n                        </>\n                    }\n                </Row>\n            </FluidContainer>\n        </WidgetListItem>\n    );\n}\n\n\nexport default function TodayAppointmentWidget(props) {\n    const [isLoading, setIsLoading] = useState(true);\n    const [state, setState] = useState({\n        appointments: [],\n        limit: 10\n    });\n\n    useEffect(() => {\n        async function initialize() {\n            try {\n                setIsLoading(true);\n                const page = 0;\n                const response = await fetch(`/api/appointments?view=waiting&page=${page}&limit=${state.limit}`, {\n                  headers: {\n                    'Authorization': `Bearer ${props.session.authToken}`\n                  }\n                });\n          \n                let data = await response.json();\n                if (!response.ok) {\n                  throw new Error(data.message);\n                }\n          \n                setState(prevState => {\n                    const newAppointments = [...prevState.appointments, ...data];\n\n                    return {\n                        ...prevState,\n                        appointments: newAppointments\n                    }\n                });\n            } catch (err) {\n                console.error(`Failed to to load waiting appointments. ${err}`);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        initialize();\n    }, [props.session, state.limit]);\n\n    return (\n        <Widget>\n            <TitleBar title=\"Today's Appointments\" />\n            {\n                (isLoading) ?\n                <>\n                    <WidgetBody>\n                        <Loader isLoading={true} />\n                    </WidgetBody>\n                </> :\n                <>\n                    <WidgetList>\n                        {(state.appointments.length !== 0) ?\n                            <>\n                                {state.appointments.map((appointment, index) => (\n                                    <AppointmentItem \n                                        key={index}\n                                        session={props.session}\n                                        appointment={appointment}\n                                    />\n                                ))}\n                                <ViewAllItem />\n                            </> :\n                            <DefaultAppointmentItem />\n                        }\n                    </WidgetList>\n                </>\n            }\n        </Widget>\n    );\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Col, FluidContainer, Row } from \"../../components/layout.js\";\nimport { WidgetColumns, WidgetRow } from \"../../components/widgets.js\";\nimport PatientTable from \"./widgets/patientTable\";\nimport TitleBar from \"../home/titleBar\";\nimport Banner from \"./widgets/banner\";\nimport RecentMedicationWidget from \"./widgets/recentMedications\";\nimport RecentPaymentWidget from \"./widgets/recentPayments\";\nimport TodayAppointmentWidget from \"./widgets/todaysAppointment\";\n\nexport default function DashBoardApp(props) {\n  const session = useSelector((s) => s.session);\n\n  return (\n    <>\n      <TitleBar title=\"Dashboard\" />\n      <Row className=\"flex-grow-1\">\n        <Col className=\"pt-3\">\n          <FluidContainer>\n            <WidgetRow>\n              <Col>\n                <Banner session={session} />\n              </Col>\n            </WidgetRow>\n            <WidgetRow>\n              <Col>\n                <PatientTable />\n              </Col>\n            </WidgetRow>\n            <WidgetColumns>\n              <TodayAppointmentWidget session={session} />\n              {!session.isPhysician && (\n                <RecentMedicationWidget session={session} />\n              )}\n              <RecentPaymentWidget session={session} />\n            </WidgetColumns>\n          </FluidContainer>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { useExtendClass } from \"./hooks\";\nimport { Row } from './layout';\nimport { BodyCard, Card, CardBody } from './cards';\nimport { List, ListItem, ListLink } from './lists';\nimport { LgIcon } from './icons';\nimport { Dropdown, DropdownButton, DropdownMenu, DropdownMenuButton } from './dropdown';\n\n\nexport function WidgetRow(props) {\n    return (\n        <Row className={useExtendClass(\"mb-3\", props.className)}>\n            {props.children}\n        </Row>\n    );\n}\n\n\nexport function WidgetDeck(props) {\n    return (\n        <div class={useExtendClass(\"card-deck mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function WidgetColumns(props) {\n    return (\n        <div class={useExtendClass(\"card-columns mb-3\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function Widget(props) {\n    return (\n        <Card className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </Card>\n    );\n}\n\n\nexport function InfoWidget(props) {\n    return (\n        <BodyCard className={useExtendClass(\"md-widget mb-3\", props.className)}>\n            {props.children}\n        </BodyCard>\n    );\n}\n\n\nexport function TitleBar(props) {\n    return (\n        <nav className=\"card-header navbar md-title px-3 py-1\">\n            <h6 className=\"navbar-brand text-muted my-1 py-0\">{props.title}</h6>\n            {props.children}\n        </nav>\n    );\n}\n\n\nexport function TitleButtons(props) {  \n    return (\n        <ul className={useExtendClass(\"nav\", props.className)}>\n            {props.children}\n        </ul>\n    );\n}\n\n\nexport function TitleButton(props) {\n    return (\n        <button type=\"button\" data-toggle=\"tooltip\" title={props.name} \n            className=\"btn btn-sm p-2 d-flex align-items-center\" onClick={props.handleClick}>\n            <LgIcon>{props.icon}</LgIcon>\n        </button>\n    );\n}\n\n\nexport function TitleToggler(props) {\n    const [collapseMode, setCollapseMode] = useState(false);\n\n    async function handleClick(e) {\n        setCollapseMode(!collapseMode);\n    }\n\n    return (\n        <button type=\"button\" data-toggle=\"collapse\" data-target={`#${props.target}`}\n            class=\"btn btn-sm p-2 d-flex align-items-center\"\n            onClick={handleClick} aria-expanded=\"false\" aria-controls={props.target}>\n            <LgIcon>{(collapseMode) ? props.collapseIcon: props.expandIcon }</LgIcon>\n        </button>\n    );\n}\n\n\nexport function WidgetBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <CardBody className={useExtendClass(\"px-3 py-2\", className)} { ...otherProps } >\n            {props.children}\n        </CardBody>\n    );\n}\n\n\nexport function WidgetCollapsible(props) {\n    const { id, className, ...otherProps } = props;\n    return (\n        <WidgetBody id={id} { ...otherProps }\n            className={useExtendClass(\"collapse\", className)}>\n            {props.children}\n        </WidgetBody>\n    );\n}\n\n\nexport function WidgetList(props) {\n    return (\n        <List className=\"list-group-flush\">\n            {props.children}\n        </List>\n    );\n}\n\n\nexport function WidgetListItem(props) {\n    return (\n        <ListItem className=\"py-2 px-0\">\n            {props.children}\n        </ListItem>\n    );\n}\n\n\nexport function WidgetListLink(props) {\n    return (\n        <ListLink url={props.url} className=\"py-2 px-0\">\n            {props.children}\n        </ListLink>\n    );\n}\n\n\nexport function WidgetDropdown(props) {\n    return (\n        <Dropdown>\n            <DropdownButton id={props.id} className=\"p-2 d-flex align-items-center\">\n                <LgIcon>more_horiz</LgIcon>\n            </DropdownButton>\n            <DropdownMenu labelledBy={props.id} className=\"dropdown-menu-right\">\n                {props.children}\n            </DropdownMenu>\n        </Dropdown>\n    );\n}\n\n\nexport function WidgetDropdownItem(props) {\n    const { className, ...otherProps} = props;\n    return (\n        <DropdownMenuButton \n            className={useExtendClass(\"d-flex align-items-center\", className)}\n            {...otherProps}\n        >\n            {props.children}\n        </DropdownMenuButton>\n    );\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Form layout components */\nexport function Form(props) {\n    const enctype = (props.enctype) ? props.enctype: \"application/x-www-form-urlencoded\";\n\n    return (\n        <form method=\"post\" autoComplete={props.autoComplete} enctype={enctype}\n            className={useExtendClass(\"\", props.className)} onSubmit={props.handleSubmit}>\n            {props.children}\n        </form>\n    );\n}\n\n\nexport function FormRow(props) {  \n    return (\n        <div className={useExtendClass(\"form-row\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {  \n    return (\n        <div className={useExtendClass(\"form-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\n/* Form element components. */\nexport function FormButton(props) {  \n    return (\n        <button type={(props.type) ? props.type: \"button\"} disabled={props.disabled}\n            className={useExtendClass(\"btn\", props.className)} onClick={props.handleClick}>\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function FormSubmit(props) {\n    return (\n        <FormButton type=\"submit\" disabled={props.disabled}\n            className={useExtendClass(\"btn-primary\", props.className)}>\n            {props.children}\n        </FormButton>\n    );\n}\n\n\nexport function FormText(props) {  \n    return (\n        <input type=\"text\" id={props.id} value={props.value} readOnly \n            className={useExtendClass(\"form-control-plaintext\", props.className)}\n        />\n    );\n}\n\n\nexport function FormLabel(props) {  \n    return (\n        <label htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </label>\n    );\n  }\n\n\nexport function FormLegend(props) {  \n    return (\n        <legend htmlFor={props.for} className={useExtendClass(\"col-form-label\", props.className)}>\n            {props.children}\n        </legend>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useExtendClass } from './hooks';\n\n\nexport function Dropdown(props) {\n    return (\n        <div className={useExtendClass(\"dropdown\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function DropdownButton(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\" \n            className={useExtendClass(\"btn\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\n\nexport function DropdownButtonToggle(props) {\n    return (\n        <button type=\"button\" id={props.id} data-toggle=\"dropdown\"\n            className={useExtendClass(\"btn dropdown-toggle\", props.className)}\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {props.children}\n        </button>\n    );\n}\n\nexport function DropdownMenu(props) {\n    return (\n        <div aria-labelledby={props.labelledBy}\n            className={useExtendClass(\"dropdown-menu\", props.className)} >\n            {props.children}\n        </div>\n    );\n}\n\nexport function DropdownMenuDivider(props) {\n    return (\n        <div className={useExtendClass(\"dropdown-divider\", props.className)}></div>\n    );\n}\n\nexport function DropdownMenuLink(props) {\n    return (\n        <Link \n            to={props.url} exact={props.exact}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n        >\n                {props.children}\n        </Link>\n    );\n}\n\nexport function DropdownMenuButton(props) {\n    return (\n        <button type=\"button\" onClick={props.handleClick}\n            className={useExtendClass(\"dropdown-item\", props.className)}\n                name={props.name} value={props.value} disabled={Boolean(props.disabled)}\n        >\n            {props.children}\n        </button>\n    );\n}","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DropdownButton } from '../../components/buttons';\nimport { DropdownButtonToggle } from '../../components/dropdown';\nimport { Form } from '../../components/form';\nimport { useExtendClass } from '../../components/hooks';\nimport { LgIcon } from '../../components/icons';\nimport { Nav, NavBar, NavBrand, NavCollapsible, NavDropdown, NavDropdownLink, NavDropdownMenu, \n    NavDropdownMenuHeader, NavDropdownMenuItem, NavLink, NavLinks, NavToggler } from '../../components/navs';\nimport { ProfilePhoto } from '../../components/users';\n\n\nfunction Toggler(props) {\n    const { className, icon, ...otherProps } = props;\n    return (\n        <NavToggler\n            className={useExtendClass(\"md-btn p-2 mx-1\", className)}\n            {...otherProps}\n        >\n            <LgIcon className=\"d-flex align-items-center\">{icon}</LgIcon>\n        </NavToggler>\n    );\n}\n\n\nfunction DropdownMenuItem(props) {\n    const { title, icon, ...otherProps } = props;\n    return (\n        <NavDropdownMenuItem\n            className=\"md-mi d-flex align-items-center\"\n            {...otherProps}\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate\">{title}</p>\n        </NavDropdownMenuItem>\n    );\n}\n\n\nexport function TitleBarLink(props) {\n    const { className, title, icon, ...otherProps } = props;\n    return (\n        <NavLink\n            { ...otherProps }\n            className={useExtendClass(\"md-btn mx-1 p-2 d-flex align-items-center\", className)}\n            tooltip={title}\n            role=\"button\"\n        >\n            <LgIcon>{icon}</LgIcon>\n            <p className=\"my-0 pl-2 text-truncate d-md-none\">{title}</p>\n        </NavLink>\n    );\n}\n\n\nexport function TitleBarLinks(props) {\n    return (\n        <NavLinks>\n            {props.children}\n        </NavLinks>\n    );\n}\n\n\nexport function TitleBarSearch(props) {\n    const [fields, setFields] = useState({\n        query: \"\"\n    });\n\n    async function handleChange(e) {\n        setFields({\n            ...fields,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (props.handleSearch) {\n                props.handleSearch(fields.query);\n            }\n        } catch (err) {\n            console.error(`Failed to handle search query. ${err}`);\n        }\n    }\n\n    return (\n        <Form handleSubmit={handleSubmit}\n            className={useExtendClass(\"form-inline mx-1 my-2 my-lg-0\", props.className)} >\n            <div className=\"input-group w-100\">\n                <input id=\"titlebarSearch01\" type=\"text\" className=\"form-control\" name=\"query\"\n                    placeholder={props.placeholder} value={fields.query} onChange={handleChange}\n                        aria-label=\"Search Query\" aria-describedby=\"titlebarSearch02\" />\n                <div className=\"input-group-append\">\n                    <button id=\"titlebarSearch02\" type=\"button\" \n                        className=\"btn btn-sm btn-outline-secondary\" >\n                        <LgIcon>search</LgIcon>\n                    </button>\n                </div>\n            </div>\n        </Form>\n    );\n}\n\n\nexport default function TitleBar(props) {\n    const session = useSelector(s => s.session);\n\n    return (\n        <NavBar className=\"navbar-expand-md navbar-light row md-tbar sticky-top justify-content-start\">\n            <Toggler\n                target=\"sideBar01\"\n                icon=\"menu\"\n                toggleType=\"modal\"\n            />\n            <NavBrand className=\"mr-auto p-1 font-weight-bold\">{props.title}</NavBrand>\n            {props.children && \n                <>\n                    <Toggler\n                        target=\"titleBarNav01\"\n                        icon=\"more_vert\"\n                    />\n                    <NavCollapsible \n                        id=\"titleBarNav01\"\n                        className=\"justify-content-end order-last order-md-4\"\n                    >\n                        {props.children}\n                    </NavCollapsible>\n                </>\n            }\n            <Nav className=\"order-md-last\" asList={true}>\n                <NotificationDropDown />\n                <UserDropdown\n                    session={session}\n                    user={session}\n                />\n            </Nav>\n        </NavBar>\n    );\n}\n\n\n// Session based components.\nfunction UserDropdown(props) {\n    const dispatch = useDispatch();\n\n    async function signOut(e) {\n        e.preventDefault();\n        try {\n            const response = await fetch(`/api/auth/signout`, {\n                method: 'GET',\n                credentials: 'same-origin',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${props.session.authToken}`\n                }\n            });\n        \n            let data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message);\n            }\n\n            dispatch({\n                type: \"session/reset\"\n            });\n        } catch (err) {\n            console.error(`Failed to sign out. ${err}`);\n        }\n    }\n\n    const menuLinks = [\n        {\n            path: `/users/${props.user.username}`,\n            title: \"Profile\",\n            icon: \"person\"\n        },\n        {\n            path: \"/settings\",\n            title: \"Settings\",\n            icon: \"settings\"\n        },\n        {\n            title: \"Sign Out\",\n            icon: \"logout\",\n            handleClick: signOut\n        }\n    ];\n\n    return (\n        <NavDropdown>\n            <NavDropdownLink className=\"px-0 mx-1 d-flex align-items-center\">\n                <ProfilePhoto \n                    className=\"md-pfl-xs md-pfl-round\"\n                    session={props.session} \n                    user={props.user}\n                />\n            </NavDropdownLink>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                {menuLinks.map((menuLink, index) => (\n                    <DropdownMenuItem\n                        key={index}\n                        path={menuLink.path}\n                        exact={menuLink.exact}\n                        title={menuLink.title}\n                        icon={menuLink.icon}\n                        handleClick={menuLink.handleClick}\n                    />\n                ))}\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}\n\n\nfunction NotificationDropDown(props) {\n    return (\n        <NavDropdown className=\"mx-1 my-2\">\n            <DropdownButtonToggle className=\"md-btn p-2 d-flex align-items-center\">\n                <LgIcon>notifications</LgIcon>\n            </DropdownButtonToggle>\n            <NavDropdownMenu className=\"dropdown-menu-right\">\n                <NavDropdownMenuHeader>\n                    Coming Soon!\n                </NavDropdownMenuHeader>\n            </NavDropdownMenu>\n        </NavDropdown>\n    );\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useExtendClass } from \"./hooks.js\";\n\n\n/* Component Definitions */\nexport function List(props) {\n    return (\n        <div className={useExtendClass(\"list-group\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function FlushedList(props) {\n    return (\n        <List className={useExtendClass(\"list-group-flush\", props.className)}>\n            {props.children}\n        </List>\n  );\n}\n\n\nexport function ListItem(props) {  \n    return (\n        <div className={useExtendClass(\"list-group-item\", props.className)}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function ListLink(props) {  \n    return (\n        <Link to={props.url} \n            className={useExtendClass(\"list-group-item list-group-action\", props.className)}>\n            {props.children}\n        </Link>\n    );\n}\n\n\nexport function ListButton(props) {\n    const { className, handleClick, ...otherProps } = props;\n\n    return (\n        <button type=\"button\" onClick={handleClick} { ...otherProps }\n            className={useExtendClass(\"list-group-item list-group-action\", className)}>\n            {props.children}\n        </button>\n    );\n}","import React from 'react';\nimport { useExtendClass } from \"./hooks.js\";\n\n\nexport function Card(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardHeader(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-header\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardBody(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function CardFooter(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card-footer\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n\n\nexport function BodyCard(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <div className={useExtendClass(\"card card-body\", className)} { ...otherProps } >\n            {props.children}\n        </div>\n    );\n}\n"],"sourceRoot":""}